{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///gundam_apps/bst-reel-viewer/src/lib/reel-bst.ts"],"sourcesContent":["\n// Reel type and BST node definition for predictive video reel viewer\nexport type Reel = {\n  id: string;\n  videoUrl: string;\n  keywords: string[];\n  description: string;\n  likes: number;\n};\n\nexport class ReelNode {\n  reel: Reel;\n  left: ReelNode | null = null;\n  right: ReelNode | null = null;\n  parent: ReelNode | null = null;\n\n  constructor(reel: Reel) {\n    this.reel = reel;\n  }\n}\n\nexport class ReelBST {\n  root: ReelNode | null = null;\n\n  // Insert a reel into the BST using a scoring function\n  insert(reel: Reel, scoreFn: (a: Reel, b: Reel) => number) {\n    const node = new ReelNode(reel);\n    if (!this.root) {\n      this.root = node;\n      return node;\n    }\n    let curr = this.root;\n    while (true) {\n      if (scoreFn(reel, curr.reel) < 0) {\n        if (!curr.left) {\n          curr.left = node;\n          node.parent = curr;\n          break;\n        }\n        curr = curr.left;\n      } else {\n        if (!curr.right) {\n          curr.right = node;\n          node.parent = curr;\n          break;\n        }\n        curr = curr.right;\n      }\n    }\n    return node;\n  }\n\n  // In-order traversal to get sorted reels\n  inOrder(): Reel[] {\n    const res: Reel[] = [];\n    function traverse(node: ReelNode | null) {\n      if (!node) return;\n      traverse(node.left);\n      res.push(node.reel);\n      traverse(node.right);\n    }\n    traverse(this.root);\n    return res;\n  }\n\n  // Find a node by ID\n  findNodeById(id: string): ReelNode | null {\n    function search(node: ReelNode | null): ReelNode | null {\n      if (!node) return null;\n      if (node.reel.id === id) return node;\n      return search(node.left) || search(node.right);\n    }\n    return search(this.root);\n  }\n\n  // Predictive reordering: sort the right subtree of the current node\n  sortRightSubtreeOfNode(node: ReelNode, scoreFn: (a: Reel, b: Reel) => number): void {\n    if (!node || !node.right) return;\n    // Collect all nodes in the right subtree\n    const rightSubtreeNodes: ReelNode[] = [];\n    function collectNodes(n: ReelNode | null) {\n      if (!n) return;\n      collectNodes(n.left);\n      rightSubtreeNodes.push(new ReelNode(n.reel));\n      collectNodes(n.right);\n    }\n    collectNodes(node.right);\n    // Sort nodes\n    rightSubtreeNodes.sort((a, b) => scoreFn(a.reel, b.reel));\n    // Build new balanced BST\n    const newRight = ReelBST.buildBalancedBST(rightSubtreeNodes);\n    node.right = newRight;\n    if (newRight) newRight.parent = node;\n  }\n\n  // Helper: build a balanced BST from sorted ReelNodes\n  static buildBalancedBST(nodes: ReelNode[]): ReelNode | null {\n    if (!nodes.length) return null;\n    const mid = Math.floor(nodes.length / 2);\n    const root = new ReelNode(nodes[mid].reel);\n    root.left = ReelBST.buildBalancedBST(nodes.slice(0, mid));\n    if (root.left) root.left.parent = root;\n    root.right = ReelBST.buildBalancedBST(nodes.slice(mid + 1));\n    if (root.right) root.right.parent = root;\n    return root;\n  }\n\n  // Get the next node in in-order traversal\n  getNextNode(node: ReelNode): ReelNode | null {\n    if (node.right) {\n      let curr = node.right;\n      while (curr.left) curr = curr.left;\n      return curr;\n    }\n    let curr: ReelNode | null = node;\n    while (curr.parent && curr === curr.parent.right) {\n      curr = curr.parent;\n    }\n    return curr.parent;\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":["file:///gundam_apps/bst-reel-viewer/src/components/ReelPlayer.tsx"],"sourcesContent":["import React from \"react\";\nimport { Reel } from \"../lib/reel-bst\";\n\ninterface ReelPlayerProps {\n  reel: Reel;\n  onLike: (id: string) => void;\n  onDislike?: (id: string) => void;\n}\n\nexport const ReelPlayer: React.FC<ReelPlayerProps> = ({ reel, onLike, onDislike }) => {\n  return (\n    <div className=\"flex flex-col items-center justify-center h-full w-full\">\n      <video\n        src={reel.videoUrl}\n        controls\n        autoPlay\n        loop\n        className=\"w-full max-h-[70vh] rounded-lg shadow-lg\"\n      />\n      <div className=\"mt-4 text-center\">\n        <div className=\"font-bold text-lg mb-2\">{reel.description}</div>\n        <div className=\"text-xs text-gray-500 mb-2\">\n          {reel.keywords.join(\", \")}\n        </div>\n        <div className=\"flex gap-2 justify-center\">\n          {onDislike && (\n            <button\n              className=\"bg-gray-700 text-white px-4 py-2 rounded-full font-semibold hover:bg-gray-800 transition order-1\"\n              onClick={() => onDislike(reel.id)}\n            >\n              üëé Dislike\n            </button>\n          )}\n          <button\n            className=\"bg-pink-500 text-white px-4 py-2 rounded-full font-semibold hover:bg-pink-600 transition order-2\"\n            onClick={() => onLike(reel.id)}\n          >\n            ‚ù§Ô∏è Like ({reel.likes})\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AASO,MAAM,aAAwC,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE;IAC/E,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,KAAK,KAAK,QAAQ;gBAClB,QAAQ;gBACR,QAAQ;gBACR,IAAI;gBACJ,WAAU;;;;;;0BAEZ,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;kCAA0B,KAAK,WAAW;;;;;;kCACzD,8OAAC;wBAAI,WAAU;kCACZ,KAAK,QAAQ,CAAC,IAAI,CAAC;;;;;;kCAEtB,8OAAC;wBAAI,WAAU;;4BACZ,2BACC,8OAAC;gCACC,WAAU;gCACV,SAAS,IAAM,UAAU,KAAK,EAAE;0CACjC;;;;;;0CAIH,8OAAC;gCACC,WAAU;gCACV,SAAS,IAAM,OAAO,KAAK,EAAE;;oCAC9B;oCACW,KAAK,KAAK;oCAAC;;;;;;;;;;;;;;;;;;;;;;;;;AAMjC","debugId":null}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///gundam_apps/bst-reel-viewer/src/components/UploadVideo.tsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\n\ninterface UploadVideoProps {\n  onUpload: (file: File) => void;\n}\n\nexport const UploadVideo: React.FC<UploadVideoProps> = ({ onUpload }) => {\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleFileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    setUploading(true);\n    setError(null);\n    try {\n      // Upload to API\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await fetch(\"/api/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.error || \"Upload failed\");\n      // Optionally, handle keywords here\n      alert(\"Keywords: \" + (data.keywords ? data.keywords.join(\", \") : \"None\"));\n      if (onUpload) onUpload(file);\n    } catch (err: any) {\n      setError(err.message || \"Upload failed\");\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center my-4\">\n      <input\n        type=\"file\"\n        accept=\"video/*\"\n        ref={fileInputRef}\n        onChange={handleFileChange}\n        className=\"hidden\"\n      />\n      <button\n        className=\"bg-blue-600 text-white px-4 py-2 rounded-full font-semibold hover:bg-blue-700 transition\"\n        onClick={() => fileInputRef.current?.click()}\n        disabled={uploading}\n      >\n        {uploading ? \"Uploading...\" : \"Upload New Video\"}\n      </button>\n      {error && <div className=\"text-red-500 mt-2 text-sm\">{error}</div>}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,MAAM,cAA0C,CAAC,EAAE,QAAQ,EAAE;IAClE,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAC9C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAElD,MAAM,mBAAmB,OAAO;QAC9B,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,CAAC,MAAM;QACX,aAAa;QACb,SAAS;QACT,IAAI;YACF,gBAAgB;YAChB,MAAM,WAAW,IAAI;YACrB,SAAS,MAAM,CAAC,QAAQ;YACxB,MAAM,MAAM,MAAM,MAAM,eAAe;gBACrC,QAAQ;gBACR,MAAM;YACR;YACA,MAAM,OAAO,MAAM,IAAI,IAAI;YAC3B,IAAI,CAAC,IAAI,EAAE,EAAE,MAAM,IAAI,MAAM,KAAK,KAAK,IAAI;YAC3C,mCAAmC;YACnC,MAAM,eAAe,CAAC,KAAK,QAAQ,GAAG,KAAK,QAAQ,CAAC,IAAI,CAAC,QAAQ,MAAM;YACvE,IAAI,UAAU,SAAS;QACzB,EAAE,OAAO,KAAU;YACjB,SAAS,IAAI,OAAO,IAAI;QAC1B,SAAU;YACR,aAAa;QACf;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,MAAK;gBACL,QAAO;gBACP,KAAK;gBACL,UAAU;gBACV,WAAU;;;;;;0BAEZ,8OAAC;gBACC,WAAU;gBACV,SAAS,IAAM,aAAa,OAAO,EAAE;gBACrC,UAAU;0BAET,YAAY,iBAAiB;;;;;;YAE/B,uBAAS,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAG5D","debugId":null}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file:///gundam_apps/bst-reel-viewer/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useCallback, useEffect, useRef, useState, useMemo } from \"react\";\nimport { Reel, ReelBST, ReelNode } from \"../lib/reel-bst\";\nimport { ReelPlayer } from \"../components/ReelPlayer\";\nimport reelsData from \"../data/reels.json\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"./animations.css\";\nimport { UploadVideo } from \"../components/UploadVideo\";\n\n// Helper: flatten any tree to a right-linear chain (robust, always in predicted order)\nfunction flattenToRightChain(nodes: Reel[]): ReelNode | null {\n  if (nodes.length === 0) return null;\n  let head = new ReelNode(nodes[0]);\n  let curr = head;\n  for (let i = 1; i < nodes.length; ++i) {\n\tconst next = new ReelNode(nodes[i]);\n\tcurr.right = next;\n\tnext.parent = curr;\n\tcurr = next;\n  }\n  return head;\n}\n\n// Helper: always get the current in-order array (robust for any tree shape)\nfunction getInOrderArray(bst: { root: ReelNode | null } | null): Reel[] {\n  const arr: Reel[] = [];\n  function traverse(node: ReelNode | null) {\n\tif (!node) return;\n\ttraverse(node.left as ReelNode | null);\n\tarr.push(node.reel);\n\ttraverse(node.right as ReelNode | null);\n  }\n  if (bst && bst.root) traverse(bst.root);\n  return arr;\n}\n\n// Scoring function for prediction\nfunction scoreReel(userLikes: string[], userDislikes: string[], a: Reel, b: Reel) {\n  const likeWeight = 10;\n  const dislikeWeight = -20;\n  const normalize = (arr: string[]) => arr.map((item) => item.toLowerCase());\n  const likes = normalize(userLikes);\n  const dislikes = normalize(userDislikes);\n  const aKeywords = normalize(a.keywords);\n  const bKeywords = normalize(b.keywords);\n\n  const aScore = aKeywords.reduce((score, k) => {\n\tif (likes.includes(k)) return score + likeWeight;\n\tif (dislikes.includes(k)) return score + dislikeWeight;\n\treturn score;\n  }, 0);\n  const bScore = bKeywords.reduce((score, k) => {\n\tif (likes.includes(k)) return score + likeWeight;\n\tif (dislikes.includes(k)) return score + dislikeWeight;\n\treturn score;\n  }, 0);\n  if (bScore !== aScore) return bScore - aScore;\n  return parseInt(a.id) - parseInt(b.id);\n}\n\nexport default function Home() {\n  // BST state\n  const [bst, setBST] = useState<ReelBST | null>(null);\n  const [currentNode, setCurrentNode] = useState<ReelNode | null>(null);\n  const [userLikes, setUserLikes] = useState<string[]>([]);\n  const [userDislikes, setUserDislikes] = useState<string[]>([]);\n  const [viewedIds, setViewedIds] = useState<Set<string>>(new Set());\n  const [direction, setDirection] = useState(0);\n  const [autoAdvance, setAutoAdvance] = useState(false);\n  const [pendingAdvance, setPendingAdvance] = useState(false);\n  const cardRef = useRef<HTMLDivElement>(null);\n  const autoAdvanceRef = useRef(autoAdvance);\n\n  // Build initial BST on mount\n  useEffect(() => {\n\tconst initialBST = new ReelBST();\n\treelsData.forEach((reel) => initialBST.insert(reel, (a, b) => scoreReel([], [], a, b)));\n\t// Start at the leftmost (first in-order) node\n\tlet curr = initialBST.root;\n\twhile (curr && curr.left) curr = curr.left;\n\tsetBST(initialBST);\n\tsetCurrentNode(curr || null);\n  }, []);\n\n  // Track viewed reels\n  useEffect(() => {\n\tif (currentNode) {\n\t  setViewedIds((prev) => new Set([...prev, currentNode.reel.id]));\n\t}\n  }, [currentNode]);\n\n  useEffect(() => { autoAdvanceRef.current = autoAdvance; }, [autoAdvance]);\n\n  // Navigation helpers\n  const goToNext = useCallback(() => {\n\tif (!currentNode) return;\n\t// Traverse right-linear chain for stitched tree\n\tconst next = currentNode.right as ReelNode | null;\n\tif (next) {\n\t  setDirection(1);\n\t  setCurrentNode(next);\n\t}\n  }, [currentNode]);\n\n  const goToPrev = useCallback(() => {\n\tif (!bst || !currentNode) return;\n\t// Traverse from root to find previous in right-linear chain\n\tlet prev: ReelNode | null = null;\n\tlet node: ReelNode | null = bst.root as ReelNode | null;\n\twhile (node && node !== currentNode) {\n\t  prev = node;\n\t  node = node.right as ReelNode | null;\n\t}\n\tif (prev) {\n\t  setDirection(-1);\n\t  setCurrentNode(prev);\n\t}\n  }, [bst, currentNode]);\n\n  // Like/dislike logic\n  const handleLike = useCallback(() => {\n\tif (!currentNode) return;\n\tconst id = currentNode.reel.id;\n\tif (userLikes.includes(id) || userDislikes.includes(id)) return;\n\tconst likedKeywords = currentNode.reel.keywords.map((k) => k.toLowerCase());\n\tconst newUserLikes = [...userLikes, ...likedKeywords, id];\n\tsetUserLikes(newUserLikes);\n\t// Split reels into viewed/current and unviewed\n\tconst allReels = getInOrderArray(bst).length ? getInOrderArray(bst) : reelsData;\n\tconst currentIdx = allReels.findIndex(r => r.id === id);\n\tconst viewed = allReels.slice(0, currentIdx + 1); // includes current\n\tconst unviewed = allReels.slice(currentIdx + 1);\n\t// Predictive sort for unviewed\n\tconst sortedUnviewed = [...unviewed].sort((a, b) => scoreReel(newUserLikes, userDislikes, a, b));\n\t// Combine and flatten to right-linear chain\n\tconst stitched = [...viewed, ...sortedUnviewed];\n\tconst newRoot = flattenToRightChain(stitched);\n\t// Find the new current node by ID\n\tlet newCurrentNode = newRoot;\n\twhile (newCurrentNode && newCurrentNode.reel.id !== id) {\n\t  newCurrentNode = newCurrentNode.right;\n\t}\n\tsetBST({ root: newRoot } as ReelBST);\n\tsetCurrentNode(newCurrentNode);\n\tif (autoAdvanceRef.current) setPendingAdvance(true);\n  }, [currentNode, userLikes, userDislikes, bst]);\n\n  const handleDislike = useCallback(() => {\n\tif (!currentNode) return;\n\tconst id = currentNode.reel.id;\n\tif (userLikes.includes(id) || userDislikes.includes(id)) return;\n\tconst dislikedKeywords = currentNode.reel.keywords.map((k) => k.toLowerCase());\n\tconst newUserDislikes = [...userDislikes, ...dislikedKeywords, id];\n\tsetUserDislikes(newUserDislikes);\n\t// Split reels into viewed/current and unviewed\n\tconst allReels = getInOrderArray(bst).length ? getInOrderArray(bst) : reelsData;\n\tconst currentIdx = allReels.findIndex(r => r.id === id);\n\tconst viewed = allReels.slice(0, currentIdx + 1); // includes current\n\tconst unviewed = allReels.slice(currentIdx + 1);\n\t// Predictive sort for unviewed\n\tconst sortedUnviewed = [...unviewed].sort((a, b) => scoreReel(userLikes, newUserDislikes, a, b));\n\t// Combine and flatten to right-linear chain\n\tconst stitched = [...viewed, ...sortedUnviewed];\n\tconst newRoot = flattenToRightChain(stitched);\n\t// Find the new current node by ID\n\tlet newCurrentNode = newRoot;\n\twhile (newCurrentNode && newCurrentNode.reel.id !== id) {\n\t  newCurrentNode = newCurrentNode.right;\n\t}\n\tsetBST({ root: newRoot } as ReelBST);\n\tsetCurrentNode(newCurrentNode);\n\tif (autoAdvanceRef.current) setPendingAdvance(true);\n  }, [currentNode, userLikes, userDislikes, bst]);\n\n  // Auto-advance after feedback\n  useEffect(() => {\n\tif (pendingAdvance) {\n\t  setPendingAdvance(false);\n\t  goToNext();\n\t}\n  }, [pendingAdvance, goToNext]);\n\n  // Keyboard navigation\n  useEffect(() => {\n\tconst handler = (e: KeyboardEvent) => {\n\t  if (e.key === \"ArrowUp\") goToPrev();\n\t  if (e.key === \"ArrowDown\") goToNext();\n\t};\n\twindow.addEventListener(\"keydown\", handler);\n\treturn () => window.removeEventListener(\"keydown\", handler);\n  }, [goToPrev, goToNext]);\n\n  // Touch swipe navigation\n  const touchStartY = useRef<number | null>(null);\n  useEffect(() => {\n\tconst handleTouchStart = (e: TouchEvent) => {\n\t  touchStartY.current = e.touches[0].clientY;\n\t};\n\tconst handleTouchEnd = (e: TouchEvent) => {\n\t  if (touchStartY.current === null) return;\n\t  const deltaY = e.changedTouches[0].clientY - touchStartY.current;\n\t  if (deltaY < -50) goToNext();\n\t  if (deltaY > 50) goToPrev();\n\t  touchStartY.current = null;\n\t};\n\twindow.addEventListener(\"touchstart\", handleTouchStart);\n\twindow.addEventListener(\"touchend\", handleTouchEnd);\n\treturn () => {\n\t  window.removeEventListener(\"touchstart\", handleTouchStart);\n\t  window.removeEventListener(\"touchend\", handleTouchEnd);\n\t};\n  }, [goToNext, goToPrev]);\n\n  // Animation variants\n  const variants = {\n\tenter: (direction: number) => ({\n\t  y: direction > 0 ? \"100%\" : \"-100%\",\n\t  opacity: 0,\n\t}),\n\tcenter: {\n\t  zIndex: 1,\n\t  y: 0,\n\t  opacity: 1,\n\t},\n\texit: (direction: number) => ({\n\t  zIndex: 0,\n\t  y: direction < 0 ? \"100%\" : \"-100%\",\n\t  opacity: 0,\n\t}),\n  };\n\n  // Memoized in-order traversal for UI context\n  const inOrder = useMemo(() => getInOrderArray(bst), [bst]);\n  const currentIdx = useMemo(() => inOrder.findIndex((r) => currentNode && r.id === currentNode.reel.id), [inOrder, currentNode]);\n\n  // Only allow one like/dislike per reel\n  const feedbackGiven = currentNode ? (userLikes.includes(currentNode.reel.id) || userDislikes.includes(currentNode.reel.id)) : false;\n\n  // Accessibility: focus management (must be before any return)\n  useEffect(() => {\n\tcardRef.current?.focus?.();\n  }, [currentNode]);\n\n  // Add upload handler\n  const handleUpload = async (file: File) => {\n    // This is a placeholder. In a real app, you would POST to an API endpoint.\n    // For now, just show an alert.\n    alert(`Uploaded: ${file.name}\\n(Backend should call add_watermark.py after upload)`);\n    // Example: await fetch('/api/upload', { method: 'POST', body: formData });\n  };\n\n  // Loading and error states\n  if (!currentNode) {\n\treturn (\n\t  <div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white\">\n\t\t<div className=\"text-lg\">Loading reels...</div>\n\t  </div>\n\t);\n  }\n\n  return (\n\t<div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white overflow-hidden\">\n\t  <UploadVideo onUpload={handleUpload} />\n\t  <div className=\"w-full max-w-md h-[80vh] flex items-center justify-center\">\n\t\t<div className=\"flex flex-row items-center w-full h-full justify-center relative\">\n\t\t  <div className=\"flex-1 h-full flex items-center justify-center\">\n\t\t\t<div className=\"relative w-full max-w-[400px] h-[70vh]\">\n\t\t\t  <AnimatePresence initial={false} custom={direction}>\n\t\t\t\t{currentNode && (\n\t\t\t\t  <motion.div\n\t\t\t\t\tref={cardRef}\n\t\t\t\t\tkey={currentNode.reel.id}\n\t\t\t\t\tcustom={direction}\n\t\t\t\t\tvariants={variants}\n\t\t\t\t\tinitial=\"enter\"\n\t\t\t\t\tanimate=\"center\"\n\t\t\t\t\texit=\"exit\"\n\t\t\t\t\ttransition={{\n\t\t\t\t\t  y: { type: \"spring\", stiffness: 300, damping: 30 },\n\t\t\t\t\t  opacity: { duration: 0.2 },\n\t\t\t\t\t}}\n\t\t\t\t\tdrag=\"y\"\n\t\t\t\t\tdragConstraints={{ top: 0, bottom: 0 }}\n\t\t\t\t\tdragElastic={1}\n\t\t\t\t\tonDragEnd={(e, { offset }) => {\n\t\t\t\t\t  const height = cardRef.current?.offsetHeight || 1;\n\t\t\t\t\t  const threshold = 0.5 * height;\n\t\t\t\t\t  if (offset.y < -threshold && currentIdx < inOrder.length - 1) goToNext();\n\t\t\t\t\t  else if (offset.y > threshold && currentIdx > 0) goToPrev();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"absolute w-full h-full flex items-center justify-center outline-none\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\taria-label={`Reel ${currentIdx + 1} of ${inOrder.length}`}\n\t\t\t\t  >\n\t\t\t\t\t<ReelPlayer\n\t\t\t\t\t  reel={currentNode.reel}\n\t\t\t\t\t  onLike={feedbackGiven ? (() => {}) : handleLike as any}\n\t\t\t\t\t  onDislike={feedbackGiven ? (() => {}) : handleDislike as any}\n\t\t\t\t\t/>\n\t\t\t\t  </motion.div>\n\t\t\t\t)}\n\t\t\t  </AnimatePresence>\n\t\t\t</div>\n\t\t  </div>\n\t\t  <div className=\"flex flex-col gap-2 ml-4 justify-center w-[56px] min-w-[56px]\">\n\t\t\t<div className=\"relative group\">\n\t\t\t  <button\n\t\t\t\tclassName={`bg-gray-800 bg-opacity-80 hover:bg-gray-700 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-md transition ${currentIdx <= 0 ? 'opacity-50 cursor-not-allowed' : ''}`}\n\t\t\t\tonClick={currentIdx > 0 ? goToPrev : undefined}\n\t\t\t\taria-label=\"Previous Reel\"\n\t\t\t\ttabIndex={currentIdx > 0 ? 0 : -1}\n\t\t\t\tdisabled={currentIdx <= 0}\n\t\t\t  >\n\t\t\t\t<span className=\"text-2xl\">‚ñ≤</span>\n\t\t\t  </button>\n\t\t\t  <div className=\"absolute left-full top-1/2 -translate-y-1/2 ml-2 px-2 py-1 bg-gray-900 text-white text-xs rounded invisible group-hover:visible whitespace-nowrap\">\n\t\t\t\tPrevious\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"relative group\">\n\t\t\t  <button\n\t\t\t\tclassName={`bg-gray-800 bg-opacity-80 hover:bg-gray-700 text-white rounded-full w-10 h-10 flex items-center justify-center shadow-md transition ${currentIdx >= inOrder.length - 1 ? 'opacity-50 cursor-not-allowed' : ''}`}\n\t\t\t\tonClick={currentIdx < inOrder.length - 1 ? goToNext : undefined}\n\t\t\t\taria-label=\"Next Reel\"\n\t\t\t\ttabIndex={currentIdx < inOrder.length - 1 ? 0 : -1}\n\t\t\t\tdisabled={currentIdx >= inOrder.length - 1}\n\t\t\t  >\n\t\t\t\t<span className=\"text-2xl\">‚ñº</span>\n\t\t\t  </button>\n\t\t\t  <div className=\"absolute left-full top-1/2 -translate-y-1/2 ml-2 px-2 py-1 bg-gray-900 text-white text-xs rounded invisible group-hover:visible whitespace-nowrap\">\n\t\t\t\tNext\n\t\t\t  </div>\n\t\t\t</div>\n\t\t\t<div className=\"mt-4 flex items-center\">\n\t\t\t  <label className=\"flex items-center cursor-pointer select-none text-sm\">\n\t\t\t\t<input\n\t\t\t\t  type=\"checkbox\"\n\t\t\t\t  checked={autoAdvance}\n\t\t\t\t  onChange={e => setAutoAdvance(e.target.checked)}\n\t\t\t\t  className=\"form-checkbox h-4 w-4 text-pink-500 mr-2\"\n\t\t\t\t/>\n\t\t\t\tAuto-Advance\n\t\t\t  </label>\n\t\t\t</div>\n\t\t  </div>\n\t\t</div>\n\t  </div>\n\t  <div className=\"mt-4 text-xs text-gray-400\">\n\t\tReel {currentIdx + 1} of {inOrder.length}\n\t  </div>\n\t</div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}